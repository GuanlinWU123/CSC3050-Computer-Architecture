/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.2.0. DO NOT MODIFY.
*/
`timescale 100fs/100fs

module InstructionRAM(CLOCK, RESET, ENABLE, FETCH_ADDRESS, DATA);
    // Inputs
    input CLOCK; // clock
    input RESET; // reset
    input ENABLE;
    input[31:0] FETCH_ADDRESS;

      // Outputs
    output[31:0] DATA;

    integer i;
    reg[31:0] tempData;
    reg[31:0] tempAddr;
  // /home/jimmy/VNMCC/src/MIPS/InstructionMem.hs:(17,1)-(23,30)
  wire signed [63:0] c$wild_app_arg;
  // /home/jimmy/VNMCC/src/MIPS/InstructionMem.hs:(17,1)-(23,30)
  wire signed [63:0] c$wild_app_arg_0;
  // /home/jimmy/VNMCC/src/MIPS/InstructionMem.hs:(17,1)-(23,30)
  wire [31:0] x1;
  // /home/jimmy/VNMCC/src/MIPS/InstructionMem.hs:(17,1)-(23,30)
  wire signed [63:0] wild;
  // /home/jimmy/VNMCC/src/MIPS/InstructionMem.hs:(17,1)-(23,30)
  wire signed [63:0] wild_0;
  wire [63:0] DATA_0;
  wire [63:0] x1_projection;

  assign c$wild_app_arg = $unsigned({{(64-32) {1'b0}},FETCH_ADDRESS});

  assign c$wild_app_arg_0 = $unsigned({{(64-32) {1'b0}},x1});

  assign DATA_0 = {64 {1'bx}};

  // blockRamFile begin
  reg [31:0] RAM [0:512-1];

  initial begin
    $readmemb("instructions.bin",RAM);
    // $display("InstructionRAM: ");
    // for (i = 0; i < 512; i = i + 1) begin
    //   $display("%b", RAM[i]);
    // end
  end

  always @(FETCH_ADDRESS) begin : InstructionRAM_blockRamFile
    tempAddr = FETCH_ADDRESS >> 2;
    // $display("tempAddr");
    // $display("tempAddr: %b", tempAddr);

    if (1'b0 & ENABLE) begin
      RAM[(tempAddr)] <= DATA_0[31:0];
    end
    if (ENABLE) begin
      tempData = RAM[(tempAddr)];
      // $display("tempData");
      // $display("tempData: %b", tempData);
    end

    // if (1'b0 & ENABLE) begin
    //   RAM[(wild_0)] <= DATA_0[31:0];
    // end
    // if (ENABLE) begin
    //   tempData <= RAM[(wild)];
    // end
  end
  // blockRamFile end

  assign DATA = tempData;

  assign x1_projection = {64 {1'bx}};

  assign x1 = x1_projection[63:32];

  assign wild = $signed(c$wild_app_arg);

  assign wild_0 = $signed(c$wild_app_arg_0);


endmodule

